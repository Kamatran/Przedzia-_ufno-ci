---
title: Przedział ufności
author: Kamelia Neumann
---

```{python}
import numpy as np
import matplotlib.pyplot as plt
```

# Próba z rozkładu normalnego i przedział ufności
Inicjujemy próbę z rozkładu normalnego o rozmiarze `n`, wartości oczekiwanej `mu`, oraz sigmie `sigma`. Następnie tworzymy przedział ufności o końcach `L` i `U`. Procedurę powtarzamy `N` razy. `lista` jest listą zmiennej `Y`, która przyjmuje wartości `False` lub `True`.
```{python}
lista = []
N = 1000
mu = 0
sigma = 5
n = 10
alfa = 1/4

for i in range(N):
    x = np.random.normal(mu,sigma, n)
    L = x.mean() - 1.1264*(sigma/np.sqrt(n))
    U = x.mean() + 1.1264*(sigma/np.sqrt(n))
    Y = L <= mu <= U
    lista.append(Y)

```

Zliczamy ile jest wartości `True` i `False` w liście `'ista`
```{python}
tak = 0
nie = 0
for i in range(len(lista)):
    if(lista[i] == True):
        tak = tak + 1
    else:
        nie = nie + 1
```

Obliczamy prawdopodobieństwo tego, że wartość oczekiwana rozkładu znajdzie się w przedziale ufności. Wartość ta jest zbliżona do tej, którą mieliśmy otrzymać.
```{python}
P = tak/N
P
```

Wykres wartości `tak` i `nie`.
```{python}
plt.bar([1,2], [tak,nie])
```
